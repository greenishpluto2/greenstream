#!/usr/bin/env node

import { ConversionOptions, validateInputFile, ensureOutputDir, runFFmpegConversion } from "./ffmpeg";
import { uploadHLSAssetsToWalrus } from "./upload";
import * as path from "path";

const AGGREGATOR = "https://aggregator.walrus-testnet.walrus.space";
const BLOB_ENDPOINT = `${AGGREGATOR}/v1/blobs`;

function showHelp(): void {
  console.log(`
üåä GreenStream - MP4 to HLS Converter & Walrus Uploader

Usage: greenstream <input_file> [options]

Arguments:
  input_file              Path to the input MP4 file

Options:
  -o, --output <dir>      Output directory for HLS files (default: ./output)
  -h, --help             Show this help message

Examples:
  greenstream video.mp4
  greenstream video.mp4 --output ./my-hls
  greenstream video.mp4 -o ./streams

Quality: All qualities (1080p, 720p, 480p, 360p, 240p) are generated by default
`);
}

function parseArgs(): ConversionOptions | null {
  const args = process.argv.slice(2);

  if (args.length === 0 || args.includes("-h") || args.includes("--help")) {
    showHelp();
    return null;
  }

  const inputFile = args[0];
  let outputDir = "./output";

  for (let i = 1; i < args.length; i++) {
    const arg = args[i];

    if (arg === "-o" || arg === "--output") {
      outputDir = args[++i];
    }
  }

  return { inputFile, outputDir };
}

async function main(): Promise<void> {
  try {
    console.log("üåä GreenStream CLI");
    console.log("==================");

    const options = parseArgs();
    if (!options) {
      return;
    }

    const { inputFile, outputDir } = options;

    // Validate input file
    validateInputFile(inputFile);

    // Ensure output directory exists
    ensureOutputDir(outputDir);

    const originalCwd = process.cwd();

    // Run FFmpeg conversion (this changes the working directory)
    runFFmpegConversion(options);

    // Reset to original working directory
    process.chdir(originalCwd);

    const absoluteOutputPath = path.resolve(outputDir);

    console.log("\nüöÄ Uploading HLS assets to Walrus...");
    const result = await uploadHLSAssetsToWalrus(absoluteOutputPath);

    console.log("\nüéâ Success! Your video has been converted and uploaded!");
    console.log("\nüìã Upload Summary:");
    console.log(`Master playlist URL: ${BLOB_ENDPOINT}/${result.masterBlobId}`);
    console.log(`Total files uploaded: ${Object.keys(result.blobMappings).length + 1}`);

    console.log("\nüì∫ You can now stream your video using:");
    console.log(`   ${BLOB_ENDPOINT}/${result.masterBlobId}`);
  } catch (error) {
    console.error("‚ùå Error:", error);
    process.exit(1);
  }
}

if (require.main === module) {
  main();
}
